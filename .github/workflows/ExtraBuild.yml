name: Extra Build

on:
  repository_dispatch:

  push:
    branches:
      - 'master'
      - 'release*'

jobs:

  build-and-test:
    name: Extra Build
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      - name: If Repository Dispatch Checkout Sha
        if: github.event_name == 'repository_dispatch'
        run: git checkout -f "${{  github.event.client_payload.buildSha }}"
        
      - name: Making Custom Scripts As Executable
        run: |
          cd .github/scripts
          echo "::set-env name=PATH::${PATH}:$(pwd)"
          chmod +x *
    
      - name: Setting the build sha variable
        run: |
          set -e
          BUILD_SHA=$(git log  -n 1 --format=format:%H)
          echo "::set-env name=CI_BUILD_SHA::${BUILD_SHA}"      
        
      - name:  Set build branch
        run: |
          set -e
          if [[ ${{ github.event_name }} = 'repository_dispatch' ]] ;
          then
            BUILD_BRANCH="${{  github.event.client_payload.buildBranch }}"
            
          else
            BUILD_BRANCH="${GITHUB_REF#refs/heads/}"
          fi
          echo "::set-env name=CI_BUILD_BRANCH::${BUILD_BRANCH}"

      - name: Assert Commit is in the specified branch
        run: ci-assertCommitInBranch "${CI_BUILD_SHA}" origin/"${CI_BUILD_BRANCH}"
        
      - name: Set Base Version
        run: |
          set -e
          BASE_VERSION=$(ci-readBaseVersion)
          echo "::set-env name=CI_BASE_VERSION::${BASE_VERSION}"

      - name: Verify Last Version Change Is In Master
        run: ci-assertLastVersionChangeIsInBranch "origin/master"

#ComputVersionForLastCommit

#Build

#Publish

      - name: BuildType
        run: echo "${{  github.event.client_payload.buildType }}"

      - name: BuildBranch
        run: echo "${{  github.event.client_payload.buildBranch }}"        

      - name: BuildSha
        run: echo "${{  github.event.client_payload.buildSha }}"

