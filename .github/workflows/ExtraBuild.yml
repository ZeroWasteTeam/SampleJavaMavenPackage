name: Extra Build

on:
  repository_dispatch:

  push:
    branches:
      - 'master'
      - 'release*'

jobs:

  build-and-test:
    name: Extra Build
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
          
      - name: Making Custom Scripts As Executable
        run: |
          cd .github/scripts
          echo "::set-env name=PATH::${PATH}:$(pwd)"
          chmod +x *
    
      - name: If Repository Dispatch Checkout Sha
        if: github.event_name == 'repository_dispatch'
        run: git checkout "${{  github.event.client_payload.buildSha }}"
        
      - name: Setting the build sha variable
        run: echo "::set-env name=CI_BUILD_SHA::$(git log  -n 1 --format=format:%H)"      
        
      - name:  Set build branch
        run: |
          if [[ ${{ github.event_name }} = 'repository_dispatch' ]] ;
          then
            echo "::set-env name=CI_BUILD_BRANCH::${{  github.event.client_payload.buildBranch }}"
          else
            echo "::set-env name=CI_BUILD_BRANCH::${GITHUB_REF#refs/heads/}"
          fi

      - name: Assert Commit is in the specified branch
        run: ci-assertCommitInBranch "${CI_BUILD_SHA}" origin/"${CI_BUILD_BRANCH}"
        
      - name: Set Base Version
        run: |
          set -e
          BASE_VERSION=$(ci-readBaseVersion)
          echo "::set-env name=CI_BASE_VERSION::${BASE_VERSION}"

# if not master branch
#MakeSureLastCommitOfVersionIsInMaster

# if master
# Make sure no change in version file in the current commit or Make sure no other changes in any other file

#if Master
#if change  


      - name: logging
        run: |
          echo "CI_BUILD_SHA is ${CI_BUILD_SHA}"
          echo "CI_BUILD_BRANCH is ${CI_BUILD_BRANCH}"
          
        
      - name: BuildType
        run: echo "${{  github.event.client_payload.buildType }}"

      - name: BuildBranch
        run: echo "${{  github.event.client_payload.buildBranch }}"        

      - name: BuildSha
        run: echo "${{  github.event.client_payload.buildSha }}"
        
      - name: Show PATH 1
        run: echo "${PATH}"

      - name: Set Path
        run: export PATH=${PATH}:/bin/nash
        
      - name: Show PATH 2
        run: echo "${PATH}"
        
      - name: Show bash rc
        run: cat ~/.bashrc

      - name: Show bash rc
        run: echo "export PATH=${PATH}:bin/nash" >> ~/.bashrc

      - name: Show PATH 3
        run: echo "${PATH}"
                
        
        

